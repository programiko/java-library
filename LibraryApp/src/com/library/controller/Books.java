package com.library.controller;

// default package
// Generated Aug 3, 2017 4:19:49 PM by Hibernate Tools 5.2.5.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Books generated by hbm2java
 */
@Entity
@Table(name = "books", catalog = "db_library")
public class Books implements java.io.Serializable {

	private Integer id;
	private Categories categories;
	private Publishers publishers;
	private String title;
	private int numberOfPages;
	private int numberOfCopies;
	private int numberOfRenting;
	private int numberOfRentedBooks;
	private float rating;
	private String location;
	private Set<Authors> authorses = new HashSet<Authors>(0);
	private Set<Debits> debitses = new HashSet<Debits>(0);

	public Books() {
	}

	public Books(String title, int numberOfPages, int numberOfCopies, int numberOfRenting, int numberOfRentedBooks,
			float rating) {
		this.title = title;
		this.numberOfPages = numberOfPages;
		this.numberOfCopies = numberOfCopies;
		this.numberOfRenting = numberOfRenting;
		this.numberOfRentedBooks = numberOfRentedBooks;
		this.rating = rating;
	}

	public Books(Categories categories, Publishers publishers, String title, int numberOfPages, int numberOfCopies,
			int numberOfRenting, int numberOfRentedBooks, float rating, String location, Set<Authors> authorses,
			Set<Debits> debitses) {
		this.categories = categories;
		this.publishers = publishers;
		this.title = title;
		this.numberOfPages = numberOfPages;
		this.numberOfCopies = numberOfCopies;
		this.numberOfRenting = numberOfRenting;
		this.numberOfRentedBooks = numberOfRentedBooks;
		this.rating = rating;
		this.location = location;
		this.authorses = authorses;
		this.debitses = debitses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "category_id")
	public Categories getCategories() {
		return this.categories;
	}

	public void setCategories(Categories categories) {
		this.categories = categories;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "publisher_id")
	public Publishers getPublishers() {
		return this.publishers;
	}

	public void setPublishers(Publishers publishers) {
		this.publishers = publishers;
	}

	@Column(name = "title", nullable = false, length = 30)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "number_of_pages", nullable = false)
	public int getNumberOfPages() {
		return this.numberOfPages;
	}

	public void setNumberOfPages(int numberOfPages) {
		this.numberOfPages = numberOfPages;
	}

	@Column(name = "number_of_copies", nullable = false)
	public int getNumberOfCopies() {
		return this.numberOfCopies;
	}

	public void setNumberOfCopies(int numberOfCopies) {
		this.numberOfCopies = numberOfCopies;
	}

	@Column(name = "number_of_renting", nullable = false)
	public int getNumberOfRenting() {
		return this.numberOfRenting;
	}

	public void setNumberOfRenting(int numberOfRenting) {
		this.numberOfRenting = numberOfRenting;
	}

	@Column(name = "number_of_rented_books", nullable = false)
	public int getNumberOfRentedBooks() {
		return this.numberOfRentedBooks;
	}

	public void setNumberOfRentedBooks(int numberOfRentedBooks) {
		this.numberOfRentedBooks = numberOfRentedBooks;
	}

	@Column(name = "rating", nullable = false, precision = 12, scale = 0)
	public float getRating() {
		return this.rating;
	}

	public void setRating(float rating) {
		this.rating = rating;
	}

	@Column(name = "location", length = 30)
	public String getLocation() {
		return this.location;
	}

	public void setLocation(String location) {
		this.location = location;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "affiliations", catalog = "db_library", joinColumns = {
			@JoinColumn(name = "book_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "author_id", nullable = false, updatable = false) })
	public Set<Authors> getAuthorses() {
		return this.authorses;
	}

	public void setAuthorses(Set<Authors> authorses) {
		this.authorses = authorses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "books")
	public Set<Debits> getDebitses() {
		return this.debitses;
	}

	public void setDebitses(Set<Debits> debitses) {
		this.debitses = debitses;
	}

}
